<!DOCTYPE html>
<meta charset="utf-8">

<link href="../src/nv.d3.css" rel="stylesheet" type="text/css">

<head>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="../src/mystyle.css">
</head>

<body>

<div id="left">

  <table id='filtertable_left'>
    <tr>
      <td>Age Start</td>
      <td>Age End</td>
      <td>Gender</td>
      <td>Education</td>
      <td>Country</td>
      <td></td>
    </tr>
    <tr>
      <td><input type='text' id = 'age_start_left' value = 1 /></td>
      <td><input type='text' id = 'age_end_left' value = 125 /></td>
      
      <td><select id='gender_left'>
      <option>1</option>
      <option>2</option>
      <option>0</option>
      </select></td>

      <td><select id='education_left'>
      <option>1</option>
      <option>2</option>
      <option>3</option>
      <option>4</option>
      <option>0</option>
      </select></td>
      <td><input type='text' id = 'country_left' value = 1 /></td>
      <td><input type='button' id = 'filter_button_left' value = 'Draw Chart' /></td>

    </tr>
  </table>

<div id="offsetDiv_left">
  <div id="test1_left" class='with-3d-shadow with-transitions'>
    <svg></svg>
  </div>
</div>

<div id="detail_left"></div>
<!-- bar charts -->
<div id = "allbarcharts">
<div id="barchartGenderEd_left" class="barchart">
  <svg></svg>
</div>
<div id="barchartGender_left" class="barchart">
  <svg></svg>
</div>
</div>
<!-- bar charts ends-->

</div>

<div id="right">

  <table id='filtertable_right'>
    <tr>
      <td>Age Start</td>
      <td>Age End</td>
      <td>Gender</td>
      <td>Education</td>
      <td>Country</td>
      <td></td>
    </tr>
    <tr>
      <td><input type='text' id = 'age_start_right' value = 1 /></td>
      <td><input type='text' id = 'age_end_right' value = 125 /></td>
      
      <td><select id='gender_right'>
      <option>1</option>
      <option>2</option>
      <option>0</option>
      </select></td>

      <td><select id='education_right'>
      <option>1</option>
      <option>2</option>
      <option>3</option>
      <option>4</option>
      <option>0</option>
      </select></td>
      <td><input type='text' id = 'country_right' value = 1 /></td>
      <td><input type='button' id = 'filter_button_right' value = 'Draw Chart' /></td>

    </tr>
  </table>

  <div id="offsetDiv_right">
    <div id="test1_right" class='with-3d-shadow with-transitions'>
      <svg></svg>
    </div>
  </div>
<div id="detail_right"></div>
</div>
<script src="../lib/d3.v3.js"></script>
<script src="../lib/stupidtable.min.js"></script>
<!--<script src="../lib/fisheye.js"></script>-->
<script src="../nv.d3.js"></script>
<script>

$(document).ready(function(){
    $('#filter_button_left').click(function(){
      var ageStart = $('#age_start_left').val();
      var ageEnd = $('#age_end_left').val();
      var gender = $('#gender_left').val();
      var education = $('#education_left').val();
      var country = $('#country_left').val();
      var page = 1;
      var urlString = "start=" + ageStart + "&end=" + ageEnd + "&gender=" + gender + "&education="
                      + education +  "&country=" + country + "&p=" + page;
      //console.log(urlString);
      $.ajax({
        type: "GET",
        //url: "http://54.82.120.1:5000/record/search/aggregation/?callback=abc&" + urlString,
        //dataType: "jsonp",        
        url: "mydata1.json",
        dataType: "json",
        success: function(data) {
          
          drawGraph(data, 'left', urlString);

        },
        error : function(httpReq,status,exception){
            alert(status+" "+exception);
        }
      });
    });
});

$(document).ready(function(){
    $('#filter_button_right').click(function(){
      var ageStart = $('#age_start_right').val();
      var ageEnd = $('#age_end_right').val();
      var gender = $('#gender_right').val();
      var education = $('#education_right').val();
      var country = $('#country_right').val();
      var urlString = "start=" + ageStart + "&end=" + ageEnd + "&gender=" + gender + "&education="
                      + education +  "&country=" + country + "&p=1";
      //console.log(urlString);
      $.ajax({
        type: "GET",
        url: "http://54.82.120.1:5000/record/search/aggregation/?callback=abc&" + urlString,
        dataType: "jsonp",
        success: function(data) {
          drawGraph(data, 'right', urlString);

        },
        error : function(httpReq,status,exception){
            alert(status+" "+exception);
        }
      });
    });
});
function drawGraph(source, myPage, urlStr) {
  //Format A
  var chart;
  nv.addGraph(function() {
    chart = nv.models.scatterChart()
                  .showDistX(false)
                  .showDistY(false)
                  .useVoronoi(false)
                  .color(d3.scale.category10().range())
                  .transitionDuration(300)
                  ;

    chart.xAxis.tickFormat(d3.format('.02f'));
    chart.yAxis.tickFormat(d3.format('.02f'));
    chart.tooltipContent(function(a,b,c,d) {
        console.log(d["point"]["size"]);
        var bccontent = '<div id="barchart_left" class="barchart"><svg></svg></div><div id="barchartGender_left" class="barchart"><svg></svg></div>';
        $('#allbarcharts').html(bccontent);

        var bitstr = d["point"]["bitstring"];
        var buttonID = "#detail_" + myPage;
        var hh = "<button id='showd' onclick = 'displayDetail(\"" + bitstr + "\", \"" + urlStr + "\", \""
                + myPage + "\")' >Show Detail</button>";
        $(buttonID).html(hh);
       // displayDetail(bitstr, urlStr, myPage);
        return "BitString: <b>" + bitstr + "</b> Count: <b>" + d["point"]["size"] + "</b>" ;
    });
    var pg = "#test1_" + myPage + " svg";
    d3.select(pg)
        .datum(getData(source))
        .call(chart);

    nv.utils.windowResize(chart.update);

    chart.dispatch.on('stateChange', function(e) { ('New State:', JSON.stringify(e)); });

    return chart;
  });  
}

function addOne(d) {
  d.digit++;
  console.log(d.digit);
}

function displayDetail(bitstr, urlStr, myPage) {
      $.ajax({
        type: "GET",
        //url: "http://54.82.120.1:5000/record/search/?callback=abc&bit=" + bitstr + "&" + urlStr,
        //dataType: "jsonp",       
        url: "mydata2.json",
        dataType: "json",
        success: function(data) {
          
         showDetailTable(data, myPage);
         barChartGenderEdu(data,myPage);
         barChartGender(data, myPage);
        },
        error : function(httpReq,status,exception){
            alert(status+" "+exception);
        }
      });  
}

function barChartGender(data, myPage) {
  var source = data["data"]["records"];
  var myData = [{key: "Edu L1", values: []}, {key: "Edu L2", values: []}, {key: "Edu L3", values: []}, {key: "Edu L4", values: []}];
  for (i = 0; i < 2; i++) {
    for (j = 0; j < 4; j++) {
        myData[j].values.push({
          x: i,
          y: 0
        });     
    }      
  }

  for (i = 0; i < source.length; i++) {
     var index = 0;
     if (source[i]["gender"] == "Female") index = 1;
     
     if (source[i]["education"].level == "1") {
        myData[0].values[index].y++;
     } else if (source[i]["education"].level == "2") {
        myData[1].values[index].y++;
     } else if (source[i]["education"].level == "3") {
        myData[2].values[index].y++;
     } else {
        myData[3].values[index].y++;
     }
  }
  console.log("below mydata");
  console.log(myData);
  var loc = "#barchartGender_" + myPage + " svg";
  drawBar(myData, loc);

}

function barChartGenderEdu(data, myPage) {
  var source = data["data"]["records"];
  var myData = [{key: "Male", values: []}, {key: "Female", values: []}];

  for (i = 0; i < 4; i++) {
    myData[0].values.push({
      x: i,
      y: 0
    });

    myData[1].values.push({
      x: i,
      y: 0
    });
  }

  for (i = 0; i < source.length; i++) {
     var ed = parseInt(source[i]["education"].level) - 1;
     console.log("education is " + ed);
     if (source[i]["gender"] == "Male") {
        myData[0].values[ed].y++;
     } else {
        myData[1].values[ed].y++;
     }
  }
  //console.log("below mydata");
  //console.log(myData);
  var loc = "#barchartGenderEd_" + myPage + " svg";
  drawBar(myData, loc);

}

function showDetailTable(data, myPage) {
  var detailHTML = "<table id='sortableTable'><thead><tr><th data-sort='string'>Gender</th><th data-sort='int'>Age</th><th data-sort='string'>Education</th><th data-sort='string'>Country</th></tr></thead><tbody>";
  

  var source = data["data"]["records"];
  console.log(source);
  var tb = "";
  for (i = 0; i < source.length; i++) {
     tb = tb + "<tr><td>" + source[i]["gender"] + "</td>"
                            + "<td>"     + source[i]["age"] + "</td>"
                            + "<td>"     + source[i]["education"].name + "</td>"
                            + "<td>"     + source[i]["country"].name + "</td>"
                            + "</tr>";
  }
  detailHTML = detailHTML + tb + "</tbody></table>";
  var d = "#detail_" + myPage;
  $(d).html(detailHTML);
  $("#sortableTable").stupidtable();
  
}

function getData(source) { //# groups,# points per group
  var data = [];

  var objList = source["data"]["bitstrings"];
  //console.log(objList);

  data.push({
    key: "# of same response",
    values: []
  });

  for (i = 0; i < objList.length; i++) {
    var origin = objList[i]["bitstring"]["origin"];
    var str = objList[i]["bitstring"]["nmds"];
    data[0].values.push({
      x: parseFloat(str.split(",")[0]),
      y: parseFloat(str.split(",")[1]),
      size: parseInt(objList[i]["count"]),
      shape: 'circle',
      bitstring: origin
    });
  }

    //console.log(data);
  return data;
}

/*---------------------bar chart------------------------*/

function drawBar(data, location) {
  nv.addGraph(function() {
      var chart = nv.models.multiBarChart()
        .transitionDuration(350)
        .reduceXTicks(true)   //If 'false', every single x-axis tick label will be rendered.
        .rotateLabels(0)      //Angle to rotate x-axis labels.
        .showControls(true)   //Allow user to switch between 'Grouped' and 'Stacked' mode.
        .groupSpacing(0.4)    //Distance between each group of bars.
      ;

      chart.xAxis
          .tickFormat(d3.format(',f'));

      chart.yAxis
          .tickFormat(d3.format(',.1f'));

      d3.select(location)
          .datum(data)
          .call(chart);

      nv.utils.windowResize(chart.update);
      //console.log(exampleData());
      return chart;
  });  
}

</script>
